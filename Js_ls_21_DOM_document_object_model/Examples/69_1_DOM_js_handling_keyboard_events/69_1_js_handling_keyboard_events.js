'use strict';

/* 
Вынесем логику обработки событий, нажатие на кнопку фомы, в отдельную функцию,
т.е. все, что мы делали в прошлом примере, мы оформляем в виде еще более 
'универсальной' функции. 

И теперь нам нужно обработать и отреагировать на нажатие клавиш с клавиатуры,
и кончно же на клики мышки мы тоже должны реагировать. Вот для этого нам нужна
'универсальная' функция - действия разные - реакция 'схожая'.
*/

/* 'Универсальный' обработчик действий */
function submitForm(){
        const input = document.querySelector('.input').value;
        if (!input){
                return;
        }
        document.querySelector('.panel').innerText = input;
        document.querySelector('.input').value = '';
}

/* Обработчик кликов мышью */
function changeClick(){
        submitForm();
}

/* Слушатель нажатия клавишь */
document.querySelector('.input').addEventListener('keydown', (event) => {
        /* 
        Будем выводить в консоль браузера реакцию на нажатие клавиш. Наиболее оптимальный
        вариант заценить масштаб реакции на нажатие скажем клавиши с буквой 'в' это увидеть 
        в консоли объект KeyboardEvent и 'не хилый такой' список его свойств и функций.
        
        Конечно можно прочитать краткое описание структуры объекта KeyboardEvent: 
        ..\Js_ls_21_DOM_document_object_model\DOC\DOM_API_Events\KeyboardEvent.md
        или полную https://www.w3.org/TR/uievents/ но лучше его увидеть в консоли.
        */
        console.log(event);
        /* 
        Тут мы 'привяжемся' к коду клавиши не зависимо от регистра, т.к., например, просто
        'в' (или английская 'd') имеет: code:"KeyD", зато 'В' или 'D', т.е. то же но уже в
        верхнем регистре даст нам реакцию на две клавиши: code:"ShiftLeft" и собственно 
        code:"KeyD", следить за консолью разработчика браузера для наглядности.
        
        И так, нам нужно ввести в поле формы любую строку, нажать Enter и отследить это,
        что мы тут и делаем ↓
        */
        if (event.code == 'Enter') {
                submitForm();
        }
});

